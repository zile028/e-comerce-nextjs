import React, { useEffect, useState } from "react";
import Head from "next/head";
import { css } from "@emotion/react";
import { animalsDatabase } from "../util/database";
import Link from "next/link";
import { setParsedCookie } from "../util/cookies";

const animalsStyles = css`
  border-radius: 5px;
  padding: 20px 30px;
  & + & {
    margin-top: 10px;
  }
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: space-evenly;
`;
const productStyle = css`
  border: 1px solid #ddd;
  border-radius: 10px;
  padding: 20px;
  width: 20%;
`;
const products = css`
  width: 70%;
  margin: auto;
  padding: 100px 0;

  h1 {
    font-size: 3rem;
    font-weight: 600;
  }
`;

export default function Cart(props) {
  const [diet, setDiet] = useState(props.diet); // from Server adn Cookies
  const [cart, setCart] = useState([]);

  useEffect(() => {
    const srvProducts = [...animalsDatabase];
    const currentCart = [];
    for (let i = 0; i < diet.length; i++) {
      const choosenProduct = diet[i];
      const foundProducts = srvProducts.find((article) => {
        return article.id === choosenProduct.id;
      });
      foundProducts.quantity = choosenProduct.eatCounter;
      currentCart.push(foundProducts);
    }
    setCart(currentCart);
  }, [diet]);

  let total = 0;

  const removeArticle = (index) => {
    const copyDiet = [...diet];
    copyDiet.splice(index, 1);
    setDiet(copyDiet);
    setParsedCookie("diet", copyDiet);
  };

  return (
    <div>
      <ul>
        {cart.length !== 0 &&
          cart.map((article, index) => {
            total += parseInt(article.price) * article.quantity;
            return (
              <li key={`cart-${article.id}`}>
                {article.name} - price:{article.price} - quantity:
                {article.quantity}
                <button
                  onClick={() => {
                    removeArticle(index);
                  }}
                >
                  Remove
                </button>
              </li>
            );
          })}
        <li>Total: {total}</li>
      </ul>
      {cart.length !== 0 && <Link href="/checkout">Checkout</Link>}
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
        />
      </Head>
      <section css={products}>
        <h1>Products</h1>
      </section>
      <div css={animalsStyles}>
        {props.animals.map((animal) => {
          return (
            <div css={productStyle} key={`animal-${animal.id}`}>
              <Link href={`/animals/${animal.id}`}>
                <a>
                  <img src={animal.image} alt="" width="300px" height="280px" />
                  <h3>{animal.name} </h3>
                  <p>{animal.price}</p>
                  <p>{animal.decription}</p>
                </a>
              </Link>
            </div>
          );
        })}
      </div> */}
    </div>
  );
}

export function getServerSideProps(context) {
  const currentDiet = JSON.parse(context.req.cookies.diet || "[]"); // diet from cookies
  return {
    props: {
      diet: currentDiet,
    },
  };
}
